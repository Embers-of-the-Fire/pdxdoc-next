function _array_like_to_array(r,e){if(e==null||e>r.length)e=r.length;for(var t=0,a=new Array(e);t<e;t++)a[t]=r[t];return a}function _array_with_holes(r){if(Array.isArray(r))return r}function _iterable_to_array_limit(r,e){var t=r==null?null:typeof Symbol!=="undefined"&&r[Symbol.iterator]||r["@@iterator"];if(t==null)return;var a=[];var n=true;var i=false;var l,o;try{for(t=t.call(r);!(n=(l=t.next()).done);n=true){a.push(l.value);if(e&&a.length===e)break}}catch(r){i=true;o=r}finally{try{if(!n&&t["return"]!=null)t["return"]()}finally{if(i)throw o}}return a}function _non_iterable_rest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _sliced_to_array(r,e){return _array_with_holes(r)||_iterable_to_array_limit(r,e)||_unsupported_iterable_to_array(r,e)||_non_iterable_rest()}function _unsupported_iterable_to_array(r,e){if(!r)return;if(typeof r==="string")return _array_like_to_array(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);if(t==="Object"&&r.constructor)t=r.constructor.name;if(t==="Map"||t==="Set")return Array.from(t);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return _array_like_to_array(r,e)}(function(r){r.languages.diff={coord:[/^(?:\*{3}|-{3}|\+{3}).*$/m,/^@@.*@@$/m,/^\d.*$/m]};var e={"deleted-sign":"-","deleted-arrow":"<","inserted-sign":"+","inserted-arrow":">",unchanged:" ",diff:"!"};var t=true,a=false,n=undefined;try{for(var i=Object.entries(e)[Symbol.iterator](),l;!(t=(l=i.next()).done);t=true){var o=_sliced_to_array(l.value,2),u=o[0],f=o[1];var _=[];if(!/^\w+$/.test(u)){_.push(/\w+/.exec(u)[0])}if(u==="diff"){_.push("bold")}r.languages.diff[u]={pattern:RegExp("^(?:[".concat(f,"].*(?:\r\n?|\n|(?![\\s\\S])))+"),"m"),alias:_,inside:{line:{pattern:/(.)(?=[\s\S]).*(?:\r\n?|\n)?/,lookbehind:true},prefix:{pattern:/[\s\S]/,alias:/\w+/.exec(u)[0]}}}}}catch(r){a=true;n=r}finally{try{if(!t&&i.return!=null){i.return()}}finally{if(a){throw n}}}Object.defineProperty(r.languages.diff,"PREFIXES",{value:e})})(Prism);